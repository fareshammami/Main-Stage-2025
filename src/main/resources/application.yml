server:
  port: 8080

spring:
  data:
    mongodb:
      host: localhost
      port: 27017
      database: dewdrop_db2
      auto-index-creation: true

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
      -
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: springboot-backendC
            client-secret: L7YdxkgryRCUSv8cXMmM94FHZ5AKz8YE
            authorization-grant-type: client_credentials
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid, profile, email
        provider:
          keycloak:
            issuer-uri: http://localhost:8081/realms/MainStageRealm
            token-uri: http://localhost:8081/realms/MainStageRealm/protocol/openid-connect/token
            authorization-uri: http://localhost:8081/realms/MainStageRealm/protocol/openid-connect/auth
            user-info-uri: http://localhost:8081/realms/MainStageRealm/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8081/realms/MainStageRealm/protocol/openid-connect/certs
            user-name-attribute: preferred_username
axon:
  axonserver:
    enabled: false

  serializer:
    general: jackson
    events: jackson
    messages: jackson

  eventhandling:
    processors:
      userInduState:           # ðŸ‘ˆ Projection group name (matches @ProcessingGroup)
        mode: tracking         # ðŸ‘ˆ Required for Mongo-backed token store
        source: eventStore

  eventstore:
    eventStoreDB:
      uri: esdb://localhost:2113?tls=false

  mongo:
    enabled: true             # ðŸ‘ˆ Active Axon Mongo token store
    database-name: dewdrop_db2
    token-store:
      collection-name: token_entries  # ðŸ‘ˆ default collection used to store tokens

